
//----------------------------------------------------
// The following code was generated by CUP v0.11b 20160615 (GIT 4ac7450)
//----------------------------------------------------

package Analizadores;

/** CUP generated class containing symbol constants. */
public class Symb {
  /* terminals */
  public static final int menos = 48;
  public static final int menor = 42;
  public static final int uint_SC = 19;
  public static final int porcentaje = 53;
  public static final int bytes = 14;
  public static final int menos_igual = 55;
  public static final int punto = 58;
  public static final int pragma = 2;
  public static final int C_Parent_R = 52;
  public static final int C_Parent_L = 7;
  public static final int address_payable = 30;
  public static final int ident = 75;
  public static final int privateSoli = 34;
  public static final int C_Parent_C = 32;
  public static final int div = 49;
  public static final int menor_igual = 41;
  public static final int intSoli = 22;
  public static final int techo = 4;
  public static final int uint_CVO = 20;
  public static final int int_DS = 24;
  public static final int mas = 47;
  public static final int internalSoli = 73;
  public static final int uint_DCS = 21;
  public static final int numero_HEX = 77;
  public static final int forSoli = 64;
  public static final int continueSoli = 63;
  public static final int falseSoli = 37;
  public static final int mayor_igual = 39;
  public static final int op_and = 45;
  public static final int doSoli = 65;
  public static final int interrogacion = 68;
  public static final int uint = 15;
  public static final int elseSoli = 67;
  public static final int string = 78;
  public static final int uint_DS = 17;
  public static final int payableSoli = 72;
  public static final int op_or = 44;
  public static final int O_Parent_R = 51;
  public static final int O_Parent_L = 6;
  public static final int bool = 12;
  public static final int epsilon = 8;
  public static final int div_igual = 57;
  public static final int O_Parent_C = 31;
  public static final int returnSoli = 61;
  public static final int igual_igual = 38;
  public static final int returns = 74;
  public static final int mayor = 40;
  public static final int int_CVO = 27;
  public static final int int_O = 23;
  public static final int mas_igual = 54;
  public static final int int_DCS = 28;
  public static final int breakSoli = 62;
  public static final int EOF = 0;
  public static final int trueSoli = 36;
  public static final int structSoli = 70;
  public static final int por_igual = 56;
  public static final int numero = 76;
  public static final int int_TD = 25;
  public static final int error = 1;
  public static final int ifSoli = 66;
  public static final int enumSoli = 9;
  public static final int byteSoli = 13;
  public static final int diferente = 43;
  public static final int functionSoli = 71;
  public static final int negacion = 46;
  public static final int solidity = 3;
  public static final int uint_TD = 18;
  public static final int por = 50;
  public static final int int_SC = 26;
  public static final int uint_O = 16;
  public static final int punto_punto = 69;
  public static final int thisSoli = 59;
  public static final int publicSoli = 33;
  public static final int coma = 11;
  public static final int igual = 35;
  public static final int whileSoli = 60;
  public static final int punto_coma = 10;
  public static final int contract = 5;
  public static final int address = 29;
  public static final String[] terminalNames = new String[] {
  "EOF",
  "error",
  "pragma",
  "solidity",
  "techo",
  "contract",
  "O_Parent_L",
  "C_Parent_L",
  "epsilon",
  "enumSoli",
  "punto_coma",
  "coma",
  "bool",
  "byteSoli",
  "bytes",
  "uint",
  "uint_O",
  "uint_DS",
  "uint_TD",
  "uint_SC",
  "uint_CVO",
  "uint_DCS",
  "intSoli",
  "int_O",
  "int_DS",
  "int_TD",
  "int_SC",
  "int_CVO",
  "int_DCS",
  "address",
  "address_payable",
  "O_Parent_C",
  "C_Parent_C",
  "publicSoli",
  "privateSoli",
  "igual",
  "trueSoli",
  "falseSoli",
  "igual_igual",
  "mayor_igual",
  "mayor",
  "menor_igual",
  "menor",
  "diferente",
  "op_or",
  "op_and",
  "negacion",
  "mas",
  "menos",
  "div",
  "por",
  "O_Parent_R",
  "C_Parent_R",
  "porcentaje",
  "mas_igual",
  "menos_igual",
  "por_igual",
  "div_igual",
  "punto",
  "thisSoli",
  "whileSoli",
  "returnSoli",
  "breakSoli",
  "continueSoli",
  "forSoli",
  "doSoli",
  "ifSoli",
  "elseSoli",
  "interrogacion",
  "punto_punto",
  "structSoli",
  "functionSoli",
  "payableSoli",
  "internalSoli",
  "returns",
  "ident",
  "numero",
  "numero_HEX",
  "string"
  };
}

